<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="Mds-MacBook-Pro.local" name="tests.TestRegisterFeature" tests="25" failures="1" timestamp="20 Nov 2017 20:22:21 GMT" time="24.174" errors="0">
  <testcase name="testFirstNameFieldWithoutCharacter" time="0.840" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithoutCharacter" time="0.753" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithString" time="1.030" classname="tests.TestRegisterFeature"/>
  <testcase name="testFirstNameFieldWithTwoCharacter" time="0.856" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithNumericCharacter" time="0.814" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithTwoCharacter" time="0.791" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithThirtyCharacter" time="0.822" classname="tests.TestRegisterFeature"/>
  <testcase name="testUserTypeFieldWithRandomOption" time="1.054" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithThreeNumber" time="1.097" classname="tests.TestRegisterFeature"/>
  <testcase name="testFirstNameFieldWithOneCharacter" time="1.089" classname="tests.TestRegisterFeature"/>
  <testcase name="testFirstNameFieldWithThirtyOneCharacter" time="0.851" classname="tests.TestRegisterFeature"/>
  <testcase name="testFirstNameFieldWithThirtyCharacter" time="1.012" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithThirtyOneNumber" time="0.870" classname="tests.TestRegisterFeature"/>
  <testcase name="testDateOfBirthFieldWithInvalidFormat" time="0.918" classname="tests.TestRegisterFeature">
    <failure type="java.lang.AssertionError" message="expected [*] but found [* Invalid DateOfBirth]">
      <![CDATA[java.lang.AssertionError: expected [*] but found [* Invalid DateOfBirth]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at tests.TestRegisterFeature.testDateOfBirthFieldWithInvalidFormat(TestRegisterFeature.java:143)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testDateOfBirthFieldWithInvalidFormat -->
  <testcase name="testDateOfBirthFieldWithValidFormat" time="0.831" classname="tests.TestRegisterFeature"/>
  <testcase name="testEmailFieldWithValidEmail" time="1.224" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithEmptyField" time="0.772" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithThirtyNumber" time="0.874" classname="tests.TestRegisterFeature"/>
  <testcase name="testGenderWithoutSelectedOption" time="0.995" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithOneCharacter" time="0.781" classname="tests.TestRegisterFeature"/>
  <testcase name="testLastNameFieldWithThirtyOneCharacter" time="0.901" classname="tests.TestRegisterFeature"/>
  <testcase name="testPhoneNumberFieldWithTwoNumber" time="0.833" classname="tests.TestRegisterFeature"/>
  <testcase name="testDateOfBirthWithoutAnyDate" time="0.750" classname="tests.TestRegisterFeature"/>
  <testcase name="testFirstNameFieldWithNumericCharacter" time="2.146" classname="tests.TestRegisterFeature"/>
  <testcase name="testGenderWithRandomOption" time="1.270" classname="tests.TestRegisterFeature"/>
</testsuite> <!-- tests.TestRegisterFeature -->
